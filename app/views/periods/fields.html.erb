<% title @period.name + ' - Report Fields' do -%>
<b>NOTE:</b>
<ul>
  <i>
  <li>You cannot edit the 'Type' of an existing field if a report has already been created for this period, since this could lead to data corruption. If you must make a change, you can delete the field and add it again, but you will lose all information that had been entered for that field.</li>
  </i>
</ul>
<% end -%>

<% if @period.errors.any? -%>
  <% set_flash_from_block :error do -%>
      <%# HACK: I can't get rid of the "is invalid" errors -%>
      <% errors = @period.errors.select{|attr, msg| msg != "is invalid"} -%>
      <h4><%= pluralize(errors.count, 'error') %> prohibited this period from being saved:</h4>
      <ul>
      <% errors.each do |attr, msg| -%>
          <li><%= msg %></li>
        <% end -%>
      </ul>
  <% end -%>
<% end -%>

<% newFieldId = 1 -%>

<div class="span12 well well-small">
  <%= form_for :fields, :url => update_fields_period_path(@period) do |f| %>
    <table id='fieldsTable' class="table">
    <thead>
      <tr>
        <th></th>
        <th>Name</th>
        <th>Delete</th>
        <th>Type</th>
        <th>Required</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <%
        for rf in @period.report_fields
          if rf.id
            rf[:html_id] = "field_#{rf.id}"
          else
            # This happens if a new field didn't save successfully
            rf[:html_id] = "newfield_#{newFieldId}"
            newFieldId = newFieldId + 1
          end
        end
      -%>
      <% for rf in @period.report_fields.select{|field| field.list_index < 0} -%>
        <%= render :partial => 'field_row', :locals => {
          :id => rf.html_id,
          :rf => rf
          }
        %>
      <% end -%>
      <%= render :partial => 'field_row', :locals => {
        :id => 'goals',
        :rf => ReportField.new(:list_index => 0)
        }
      %>
      <% for rf in @period.report_fields.select{|field| field.list_index > 0} -%>
        <%= render :partial => 'field_row', :locals => {
          :id => rf.html_id,
          :rf => rf
          }
        %>
      <% end -%>
    </tbody>
    </table>

    <a href='javascript:void(0);' onclick="addRow();">Add Field</a>
    <br>
    <br>
    <%= f.submit 'Save', class: 'btn btn-primary' %>
    <%= link_to 'Back', @period, class: 'btn' %>
  <% end %>
</div>

<div style='display:none;'>
  <table>
  <%= render :partial => 'field_row', :locals => {:id => 'blankfield', :rf => ReportField.new} %>
  </table>
</div>
    
<script type='text/javascript'>
function setListIndices()
{
  var rows = $('#fieldsTable tbody tr');
  var index = rows.length;
  for (var i=0; i<rows.length; i++)
  {
    console.log(rows[i].id);
    if (rows[i].id == 'goals_row')
    {
      index = i;
      break;
    }
  }
  if (index == rows.length)
  {
    // No goals_row tr
    //alert('no goals row!');
    var x = 1;
    for (var i=0; i<rows.length; i++)
    {
      rows[i].cells[0].childNodes[1].value = x;
      x = x+1;
    }
  }
  else
  {
    // Set indices for those above goals_row
    var x = -1;
    for (var i=index-1; i>=0; i--)
    {
      rows[i].cells[0].childNodes[1].value = x;
      x = x-1;
    }
    // Set indices for those below goals_row
    var x = 1;
    for (var i=index+1; i<rows.length; i++)
    {
      rows[i].cells[0].childNodes[1].value = x;
      x = x+1;
    }
  }
}
function reorder(id, dir)
{
  id = id + '_row';
  var rows = $('#fieldsTable tbody tr');
  var index = rows.length;
  for (var i=0; i < rows.length; i++)
  {
    if (rows[i].id == id)
    {
      index = i;
      break;
    }
  }
  if (index == rows.length) return; //invalid

  if (dir == 'up')
  {
    if (index == 0)
    {
      return; // At top
    }
    var otherId = rows[index - 1].id;
    $('#'+otherId).insertAfter('#'+id);
  }
  else if (dir == 'down')
  {
    if (index == rows.length - 1)
    {
      return; // At bottom
    }
    var otherId = rows[index + 1].id;
    $('#'+id).insertAfter('#'+otherId);
  }

  setListIndices();
};

function toggleDelete()
{
  var checked = this.checked;
  var rowId = this.id.substr(0,this.id.length-7)+'_row';
  var inputs = $('#'+rowId+' input, #'+rowId+' textarea, #'+rowId+ ' select');
  for (var i=0; i<inputs.length; i++)
  {
    if (!inputs[i].hidden && inputs[i].id != this.id)
      inputs[i].disabled = checked;
  }
}

function addRow()
{
  $('#blankfield_row').clone().insertAfter('#fieldsTable tr :last');
  var html = $('#fieldsTable tr :last').html();
  var id = 'newfield_'+newFieldId;
  newFieldId++;
  var idx = html.indexOf('blankfield');
  while (idx > 0)
  {
    html = html.replace('blankfield', id);
    idx = html.indexOf('blankfield');
  }
  id = id + '_row';
  $('#fieldsTable tr :last')[0].id = id;
  $('#'+id).html(html);
  $('#'+id+' .remove_field_box')[0].onchange = toggleDelete;

  setListIndices();
}

$(document).ready(function()
{
  var boxes = $('.remove_field_box');
  for (var i=0; i < boxes.length; i++)
  {
    boxes[i].onchange = toggleDelete;
  }
  newFieldId = <%= newFieldId %>;

  setListIndices();
});
</script>

